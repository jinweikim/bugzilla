['mockup:', "The bookmarks toolbar dropzone icon accidentally lost it's svg properties like fill, fill-opacity.\nHence it looks black on dark theme.\n\n\nA follow up from", 'User Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0\nBuild ID: 20161001030430\n\nSteps to reproduce:\n\n1. Start Nightly in RTL locales\n2. Open DevTools > Inspector\n3. Resize inspector sidebar until displaying all-tabs-menu\n\n\nActual results:\n\nall-tabs-menu position is the start side.\n\nRegression range:', 'They should have the same color as other toolbar icons, see', 'Nightly 58 x64 20170926100259 de_DE @ Debian Testing (KDE / Radeon RX480)\ngpu-process + layers force accel + webrender + webrendest + layersfree\n\nI just updated to this build, restarted Nightly and got multiple tab crashes on about:newtab and also on web tabs, but not immediately everytime.\nNow I disabled webrendest and it seems stable.', 'Spec here:', 'Regression? Just updated to this build before the quoted crash happened.\n\n(Jan Andre Ikenmeyer [:darkspirit] from', 'Hi, \n\nThe default fill colour for a Highlight card with no image is currently too light on Dark theme. Can you please change this to Grey 60 ##4a4a4f. See attached for reference', '[Affected versions]:\n- Firefox Beta v62.0b3, Build ID 20180625141512\n\n[Affected Platforms]:\n- All Windows\n- All Mac\n- All Linux\n\n[Steps to reproduce]:\n1. Create a new Firefox profile.\n2. Start the browser with the new profile and observe the behavior.\n\n[Expected results]:\n- The "about:welcome" page is displayed as soon as the browser starts.\n\n[Actual results]:\n- The "about:newtab" page is briefly displayed before the "about:welcome" one.\n\n[Notes]:\n- The issue is not reproducible on slower machines.\n- This issue is not reproducible on Nightly because the about:welcome page is not set as the first run page.\n- Attached a screen recording of the issue:', 'New "Bookmarks Toolbar Items" icon in Bookmarks Toolbar in "Customize..." mode is too dark after\n\nSTR:\n1. Open "Customize..." mode\n2. Look on far left in Bookmarks Toolbar on "Bookmarks Toolbar Items" icon\nand see that it\'s full black, instead of grey, which makes it inconsistent with other icons in Location Bar in Bookmarks Bar\n\nCaused by:', '[Affected versions]:\n- Nightly 63.0a1 Build ID 20180701220749\n\n[Affected Platforms]:\n- All Windows\n- All Mac\n- All Linux\n\n[Steps to reproduce]:\n1. Open the Browser and navigate to the about:welcome page.\n2. Click the "Continue" button and observe the behavior.\n\n[Expected results]:\n- The "Email" field is focused.\n\n[Actual results]:\n- The "Email" field is highlighted with red and the "Valid email required" message appears in a red bubble towards the top of the page, but the field is not focused.\n\n[Notes]:\n- Attached a screen recording of the issue.', 'STR:\n\n- Open today\'s Nightly (63.0a1 (2018-07-02) (64-bit) on MacOS), with a fresh profile.\n- Observe that the "Okay, got it" button that dismisses the explanatory text above the Pocket section is pushed below the line of text it dismisses (screenshot attached).\n\nExpected result (I think):\n- The button should be in line with the text, as with the "Import now" button for the migration text (below the searchbar, also visible in the screenshot).', 'In about:preferences#home make sure you have the first option selected for the Homepage pref.\nSwitch to Blank page (#3rd option) and try switching back to first. Notice how switching to the first option requires you to select it a second time around for it to update.', "mozregression --good 2018-04-01 --bad 2018-04-10 --pref gfx.webrender.all:true startup.homepage_welcome_url:'", 'We need to create a UI template that can communicate with AS Router via actions like the existing ASR templates. It should also implement telemetry and impression collection in a similar way.\n\nNote that this may need to be broken down into more bugs to handle separate aspects of the UI.', 'We need to add the custom header, author label, etc.', 'User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101 Firefox/61.0\nBuild ID: 20180329100042\n\nSteps to reproduce:\n\n1. Sign in to Gmail.\n2. Go to Gmail\'s Settings > General.\n3. Enable "Show snippets - Show snippets of the message (like Google web search!)" . The option is near the bottom.\n4. Go to Inbox or All Mail, which shows a list of email and some of the email content (snippets).\n\n5. Turn on devtool\'s Inspector on the page.\n6. Add the following rule in the Rules panel on the right, to set text-shadows on all text:\n* { text-shadow: 1px 1px; }\n7. Observe the snippets\n\n\nActual results:\n\nText shadow is showing on clipped snippets, overlapping the date, and extending towards the right end of the page.\n(Please see the attached screenshot.)\n\n\nExpected results:\n\nWith WebRender is off, text shadow is not shown on those clipped text.', "We would like to automatically add a Top Site Search Shortcut to users' for existing users if they have an open (i.e. unpinned) tile available and the host name (google, amazon) is found in their top sites.\n\nNote that we should store some kind of state in persistent storage when we do this so that we do not add a second time if it is removed/edited/replaced.", 'To integrate Optimizely with GA it needs to be loaded before GA, see documentation:', "The current build system uses a default WINVER of 0x0400.\nThis gives us the lowest common denominator of Windows support.\nHowever it does not define some things we need to support MSAA (Microsoft \nActive Accessibility), such as OBJID_WINDOW and WM_GETOBJECT.\n\nIs there any reason we can't use WINVER=0x0500 as the default now?\n\nI notice that in some modules, people are forcing WINVER = 0x0500 temporarily \nbefore they include certain files.", 'For Photon we want new set of bookmark toolbar buttons, see', "Build ID: 20011001\n\nComposer looses focus after deleting a linked image.\n\nReproducible: Always\n\nSteps to Reproduce:\n1.Open Composer\n2.Insert an image using the image button on the toolbar\n3.Highlight the image and click the link button on the toolbar then create a\nlink and click ok\n4.Click the image and delete it\n5.Type some text\n\nActual Results:\nThe text does not type because the composer window has lost focus.  In order to\ntype again you need to click in the window.\n\nExpected Results:\nI would expect that composer would maintain it's focus after deleting a linked\nimage.", "For brand new Profiles, the @google and @amazon Search Shortcuts should show up in the user's default Top Sites under the following conditions:\n\n- @google will be added as #1 Top Site for all countries where Google is the default search provider\n- @amazon will be added as the #2 Top Site for all countries that have Amazon as a default Top Site.  In the case where Amazon is the only Shortcut added, it will, of course, be the #1 Top Site", 'When inspecting a window object in the js debugger, nsHTMLImageAccessible.cpp\ncauses a crash.\n\nIndex: nsHTMLImageAccessible.cpp\n===================================================================\nRCS file: /cvsroot/mozilla/accessible/src/nsHTMLImageAccessible.cpp,v\nretrieving revision 1.11\ndiff -u -r1.11 nsHTMLImageAccessible.cpp\n--- nsHTMLImageAccessible.cpp\t2001/09/25 22:32:27\t1.11\n+++ nsHTMLImageAccessible.cpp\t2001/10/09 19:37:27\n@@ -58,7 +58,8 @@\n   nsCOMPtr<nsIDOMElement> element(do_QueryInterface(aDOMNode));\n   nsCOMPtr<nsIDocument> doc;\n   nsCOMPtr<nsIPresShell> shell(do_QueryReferent(mPresShell));\n-  NS_ASSERTION(shell,"Shell is gone!!! What are we doing here?");\n+  if (NS_WARN_IF_FALSE(shell,"Shell is gone!!! What are we doing here?"))\n+    return;\n \n   shell->GetDocument(getter_AddRefs(doc));\n   nsAutoString mapElementName;\n\nTop of stack looked like this...\n(gdb) where\n#0  0x42571aa4 in nsHTMLImageAccessible::nsHTMLImageAccessible (\n    this=0x8b9ab70, aDOMNode=0x8ba8e30, aShell=0x0)\n    at nsHTMLImageAccessible.cpp:63\n#1  0x425690bf in nsAccessibilityService::CreateXULImageAccessible (\n    this=0x8db51f0, aNode=0x8ba8e30, _retval=0xbfff955c)\n    at nsAccessibilityService.cpp:351\n#2  0x401e9300 in XPTC_InvokeByIndex (that=0x8db51f0, methodIndex=15, \n    paramCount=2, params=0xbfff954c) at xptcinvoke_unixish_x86.cpp:153', "Sync's behavior on android is undefined if more than one version of firefox is installed. What, if any, should the behavior be, and is the desired behavior even technically feasible?", "I've been noticing double events for some time -- but they don't occur in MFCEmbed.\n\nIt comes down to the fact that HTML events are bubbling up to the chrome's\nnsRootAccessible as well. We've been creating an nsRootAccessible that listens\nfor events for both the HTML document and the XUL document.\n\nI believe we really only want to create the nsRootAccessible's for the true root.", "Yo netops, bugzilla-stage-tip.mozilla.org can't auto update because it can't see it's daddy, therefore pls halp!\n\nweb2.stage.bugs.scl3.mozilla.com -> bzr.mozilla.org, ports 4155 and 22", 'here is the simple test case.\n-----------\n<html>\n<title> nsIAccessible Interface Test Case </title>\n<body>\n<b> Simple text which is not focusable </b>\n\n<br><br>\n<button value="submit"> Submit </button>\n\n</body>\n</html>\n---------------------------\nOpen the above test case in Mozilla or mfcEmbed. Run mozInspect, click on "show \nhighlight rectangle" and move the cursor over to the text "Simple text which is \nnot focusable".Watch the value of state.It shows\n"read only,focusable,selectable". It should not show focusable since text is \nnot focusable. IE shows "read only,selectable".', 'Filed this as a spinoff for', 'Below it the test case:\n-----------------------------------------\n<html>\n<head>\n<script type="text/javascript">\n\nfunction getAccessibleNode(startNode)\n{\n  var accessibleService = null;\n  var accessibleNode = null;\n  try{\n   netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");\n   netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");\n\n   accessibleService = Components.classes\n["@mozilla.org/accessibilityService;1"].createInstance();\n   accessibleService = accessibleService.QueryInterface\n(Components.interfaces.nsIAccessibilityService);\n  }\n  catch(e){\n   alert("Error getting accessibility service");\n  }\n\n  try{\n   netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");\n   netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");\n\n   accessibleNode = accessibleService.getAccessibleFor(startNode);\n\n   return accessibleNode;\n  }\n  catch(e){\n   return "Exception";\n  }\n}\n\nfunction getValue()\n{\n  try{\n   return accNode.accValue;\n  }\n  catch(e){\n    return(e);\n  }\n}\n\nfunction executeTestCase()\n{\n try{\n  netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");\n  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");\n\n  var node = document.getElementsByTagName("button").item(0);\n  node = node.firstChild;\n  accNode = getAccessibleNode(node);\n  var value = getValue();\n  var newvalue = value.toString();\nalert("Value: " + newvalue);\n\n }\n catch(e){\n  alert("Exception: " + e);\n }\n}\n\n</script>\n</head>\n<body>\n\n<script type="text/javascript">\n\n<!-- Test Button -->\ndocument.write(\'<br>\');\ndocument.write(\'<b>Testing Button for Accessibility..</b><br><br>\');\ndocument.write(\'<button value="submit">Submit</button>\');\n\nsetTimeout("executeTestCase();", 2000);\n\n</script>\n</body>\n</html>\n------------------------------------------------------------\nWhen you execute the test case in Mozilla or MfcEmbed the alert shows \n\nValue: [Exception... "Component returned failure code: 0x80004005 (NS_ERROR_FAIL\nURE) [nsIAccessible.accValue]"  nsresult: "0x80004005 (NS_ERROR_FAILURE)"  locat\nion: "JS frame :: file:///C:/Netscape/Accessibility/bug.html :: getValue :: line\n 36"  data: no]\nActually it should show NS_ERROR_NOT_IMPLEMENTED if the functionality is not \nimplemented.', "I cannot use the keyboard to focus on links in the element properties window.\n\nThis window is where accessibility information is often exposed - for example,\nthe links provided in the longdesc attribute on images and frames. So, we're\nexposing the accessibility information visually, but now allowing the keyboard\nusers access to it.\n\nI'll take a look and see if I can fix it first.", 'No reported Default Action and cannont execute the default action ( to select\nthem ) for HTML Select Options.', "Netscape is adding this keybinding because of a confidential customer\nrequirement; if Mozilla would like to be compatible, here's the change,\notherwise we'll have to take it in our tree only.\n\nOur normal binding for redo, Accel+Y will remain for now.\n\nAccel+shift+Z is actually used for redo in a variety of Windows programs,\nincluding notepad, Visual Studio, and ordinary text fields. There is no clear\nstandard for redo, except that it can be Accel+Y or Accel+shift+Z.", 'Below is the shortened version of test case.\n----------------------\n<html>\n<head>\n<script type="text/javascript">\n\nfunction getAccessibleNode(startNode)\n{\n  var accessibleService = null;\n  var accessibleNode = null;\n  try{\n   netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");\n   netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");\n\n   accessibleService = \nComponents.classes["@mozilla.org/accessibilityService;1"].createInstance();\n   accessibleService = \naccessibleService.QueryInterface(Components.interfaces.nsIAccessibilityService);\n  }\n  catch(e){\n   alert("Error getting accessibility service");\n  }\n\n  try{\n   netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");\n   netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");\n\n   accessibleNode = accessibleService.getAccessibleFor(startNode);\n   return accessibleNode;\n  }\n  catch(e){\n   return "Exception";\n  }\n}\n\nfunction getDomNodeTable()\n{\n try{\n  netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");\n  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");\n\n  var node = document.getElementsByTagName("table").item(0);\n  return node;\n }\n catch(e){\n  alert("Exception: " + e);\n }\n}\n\n</script>\n</head>\n<body>\n\n<center>\n<table border cols=2 width="50%">\n<caption>Test Table</caption>\n <tr>\n  <td> Row1,Col1</td>\n  <td> Row1,Col2</td>\n </tr>\n <tr>\n  <td> Row2,Col1</td>\n  <td> Row2,Col2</td>\n </tr>\n <tr>\n  <td> Row3,Col1</td>\n  <td> Row3,Col2</td>\n </tr>\n</table>\n</center>\n\n<script type="text/javascript">\ntry{\n  netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");\n  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");\n\n  var domNode = getDomNodeTable();\n  alert("domNode: " + domNode);\n  var accNode = getAccessibleNode(domNode);\n  alert("accNode: " + accNode);\n\n  var name = accNode.accName;\n  alert("Name: " + name);\n}\ncatch(e){\n  alert("Exception: " + e);\n}\n</script>\n</body>\n</html>\n----------------------\nI am displaying the HTML table first, and using dom api i am getting the dom \nnode for table. after getting the dom node for table i am checking for wheather \nthat dom node is accessible or not.in this case the dom node is accessible.\n1.When i run this test case from mozilla  accNode.accName returns null.\n2.When i run this test case from mozilla and open mozInspect and check the \ntable node mozInspect shows null.that is fine but\n3.When i run this test case from IE and open mozInspect and check the table node \nmozInspect returns "Test Table". It picks up the caption text for accName.\nI know the test case doesnot run properly from IE but i wanted to display table \nso that i can use to test using mozInspect.', 'A topcrash with the stack below started appearing in 2002-03-10-11 builds.  I\nassume it was caused by the checkin:\n\ndate: 2002/03/10 06:21:38;  author: aaronl%netscape.com;  state: Exp;  lines:\n+471 -215\nFixes', "Sometimes GetPrimaryFrameFor to be called during the destruction phase of the\nframe manager. This causes it to return an invalid pointer to a frame.\n\nGetPrimaryFrameFor needs to check a flag, and return early if the frame manager\nis in the middle of it's destruction phase.\n\nThis is the Bugzilla equivalent of Bugscape 12117\n(", "Infinite loop in nsEventStateManager::MoveFocusToCaret, tabbing to form controls\n\nSomehow, I've hit an infinite loop while doing some testing of form controls.\n\n(NOTE: this happens with either the current (c++) implementation of form controls\nor with the xbl-based form controls. It is independent of [XBLFC].)\n\nSteps to reproduce:\n1) start browser and load the first attachment to this bug (simple form)\n2) tab out of urlbar to first link, and tab again to first <select>\n3) use the mouse to set the focus back in the urlbar\n4) again, tab out of urlbar to first link, and tab again to first <select>\n5) at this point, wait. In a few seconds, CPU will go to 100%\n\nThe stack trace for the loop is below, and it is stuck in the 'do {} while ();'\nof MoveFocusToCaret, which starts at about line 4332 of nsEventStateManager.cpp\n\nTested with win2k, cvs build pulled ~4pm 03/18\n\n-> aaronl, since cvsblame has him as the author of that loop.\n\nnsEventStateManager::MoveFocusToCaret(nsEventStateManager * const 0x0158d9ce,\nint 0x00000000, int * 0x00000000) line 4332\nnsEventStateManager::ShiftFocusInternal(nsEventStateManager * const 0x00000013,\nint 0x0158d810, nsIContent * 0x00000001) line 2776\nnsEventStateManager::ShiftFocus(nsEventStateManager * const 0x025498c8, int\n0x00000001, nsIContent * 0x00000000) line 2706\nnsEventStateManager::PostHandleEvent(nsEventStateManager * const 0x01cdc2ae,\nnsIPresContext * 0x025498c8, nsEvent * 0x02534a58, nsIFrame * 0x0012fb44,\nnsEventStatus * 0x0259f5ec, nsIView * 0x0012fa14) line 1830\nPresShell::HandleEventInternal(PresShell * const 0x00000013, nsEvent *\n0x01cdc04c, nsIView * 0x025498c8, unsigned int 0x025a04d8, nsEventStatus *\n0x00000001) line 6074 + 25 bytes\nPresShell::HandleEvent(PresShell * const 0x01e392a3, nsIView * 0x025498c8,\nnsGUIEvent * 0x025a04d8, nsEventStatus * 0x0012fb44, int 0x0012fa14, int &) line\n5977 + 24 bytes\nnsViewManager::HandleEvent(nsViewManager * const 0x00000013, nsView *\n0x01e313c4, nsGUIEvent * 0x02567cc8, int 0x0012fb44) line 2043\nnsView::HandleEvent(nsView * const 0x00000013, nsViewManager * 0x01c4d6f8,\nnsGUIEvent * 0x0012fb44, int 0x00000000) line 306\nnsViewManager::DispatchEvent(nsViewManager * const 0x01e31f2d, nsGUIEvent *\n0x01c4d6f8, nsEventStatus * 0x3d888889) line 1857 + 29 bytes\nHandleEvent(nsGUIEvent * 0x0012fb44) line 83\nnsWindow::DispatchEvent(nsWindow * const 0x02567d3c, nsGUIEvent * 0x0012fb44,\nnsEventStatus & nsEventStatus_eIgnore) line 865 + 3 bytes\nnsWindow::DispatchWindowEvent(nsWindow * const 0x00000013, nsGUIEvent *\n0x00000000) line 886\nnsWindow::DispatchKeyEvent(nsWindow * const 0x00000013, unsigned int 0x00000083,\nunsigned short 0x0000, unsigned int 0x00000009, long 0x00000000) line 2659 + 32\nbytes\nnsWindow::OnChar(nsWindow * const 0x00000013, unsigned int 0x00000009, unsigned\nint 0x00000009, unsigned char 0x00) line 2807 + 20 bytes\nnsWindow::ProcessMessage(nsWindow * const 0x00000013, unsigned int 0x018a2575,\nunsigned int 0x00000102, long 0x00000009, long * 0x000f0001) line 4167 + 16 bytes\nnsWindow::WindowProc(HWND__ * 0x77e13eb0, unsigned int 0x00db03c2, unsigned int\n0x00000000, long 0x00000009) line 1130 + 15 bytes\nUSER32! 77e13eb0()\nnsAppShellService::Run(nsAppShellService * const 0x00f50110) line 309\nmain1(int 0x004020de, char * * 0x00000001, nsISupports * 0x00312c30) line 1350 +\n10 bytes\nmain(int 0x00000000, char * * 0x00313bb8) line 1698 + 23 bytes\nWinMain(HINSTANCE__ * 0x00400000, HINSTANCE__ * 0x00400000, char * 0x001333fb,\nHINSTANCE__ * 0x00400000) line 1716 + 23 bytes\nMOZILLA! WinMainCRTStartup + 308 bytes", "When I compose a new message, I type in an address, hit tab, type in a subject,\nhit tab.  I expect to see the blinking cursor now displayed in the body of the\nmessage, but there is no cursor to be seen anywhere.  If I start typing, the\ntext I typed appears where you would expect it at the top of the composition\nwindow, and so does the cursor, but until I type, the cursor is lost.\n\nI have seen similar problem typing into form windows in the browser, but I can't\nreplicate the behaviour as reliably as in the mail composition window.\n\nMozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:0.9.9+) Gecko/20020325", "There used ( 6.2.1 ) to be a subtly dotted ring around an area of an image map\nwhen you tabbed through the areas. I don't see this anymore. In a simplified\ntest I see during tabbing:  URLbar -> document -> Entire image map -> URLbar etc...\n\nI'll attach the simple testcase i developed.", '<label value="Click here:" control="open-button"/>\n\n<description>\n  Testing Description tag for Accessibility. \n</description>  \n\nAdd the above text to the xul file and open in mozilla or embedding application.\nopen Inspect and click on "show highlight rectangle". Move the cursor on to the\nlabel text or description text. watch the State attribute in Inspect tool. You\nsee "readonly, focusable, selectable". It should show only "readonly", since\ntext is not focusable and selectable.', 'When I press F7 in 2002 040303, nothing happens in the browser window, and the\nfollowing appears on the JS console:\n\nError: uncaught exception: [Exception... "Component returned failure code:\n0x8000ffff (NS_ERROR_UNEXPECTED) [nsIPrefBranch.getBoolPref]"  nsresult:\n"0x8000ffff (NS_ERROR_UNEXPECTED)"  location: "JS frame :: <unknown filename> ::\nonxblkeypress :: line 4"  data: no]', 'This is the same problem that occured in', 'try the below test case..\n----------------------------------\n<html>\n<title> nsIAccessible Interface Test Case </title>\n<body>\n\n<b><center> HTML Elements </center></b>\n<br>\n<!-- Test Anchor -->\n<!-- Anchor linking to external file -->\n<b> Testing Link </b>\n<br>\n<a href="', '-- Testcase attached.\nSummary describes the bug.', "I have all the MozillaBuildList.pl changes, I think.\nI still need to generate the .xml build files.\n\nUnfortunately, I'm having a lot of bad luck getting Mozilla to build on my Mac\nat all. Tried pulling a fresh tree, getting CodeWarrior 7.2, but still no luck.\nSo I can't move forward on this at the moment.", "If you go to the above URL, which is to an anchor in the Java documentation, the\nbrowser brings up the page scrolled to the anchor correctly. If you click on the\nlink to the same anchor on the page the browser scrolls to the top of the page,\ninstead. The link to the anchor can be found in the 'Method Index' section, it\nis the last link in that section.\nThis applies to all links in the Java documentation, at least.", 'win32 trunk build 2002083108, win98se\n\nWhen the keyboard is used to access menu items, the initial keyboard shortcut\ndoes drop down the menu, but typing the letter for a particular menu item\ninitiates a "find in page" for that letter instead of initiating the menu item.\n Happens with a new profile or an existing one.\n\nSteps to reproduce:\n1. Create a new profile and start the browser (should go to default home page', "If you use Alt+Tab, but let go of the alt before the tab, typeaheadfind gets\ndisabled.\n\nThis is because typeaheadfind receives a DOMMenuBarActive event, but not a\nDOMMenuBarInactive event. It turns out that ToggleMenuActiveState() uses\nSetActive(PR_TRUE) to turn on menus, but it doesn't use SetActive(PR_FALSE) to\nturn them off. SetActive is where the DOMMenuBar* events are fired.\n\nThis occurs on Windows, possibly on Linux.", "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.1b) Gecko/20020902\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.1b) Gecko/20020902\n\nFor me typeaheadfind won't find any of (at least) abgiloruz1 as the first\ncharacter, in full search mode.\n\nsee", "Hmm ... dumb mistake. My last performance enhancement for typeaheadfind\nregressed it so that it would shut off when a new page was loaded in the same\nwindow. Duh.\n\nWell, the coming patch fixes that, and implements bz's suggestions for improving\ntyping performance."]